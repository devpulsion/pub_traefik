name: Deploy release in production
on:
  release:
    types: [published]

jobs:
  create_version:
    name: Create version
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1
      - name: Copy production scripts into the new version
        run: cp -R production/current production/v${{ github.event.release.tag_name }}
      - name: Commit version ${{ github.event.release.tag_name }}
        uses: EndBug/add-and-commit@v4
        with:
          add: 'production/v${{ github.event.release.tag_name }}'
          author_name: devpulsion
          author_email: devpulsion@users.noreply.github.com
          force: true
          message: 'ci: add production v${{ github.event.release.tag_name }}'
          ref: 'master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create remote directory
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          port: ${{ secrets.DEPLOY_PORT }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            mkdir -p ${{ secrets.DEPLOY_PATH }}
      - name: Sync production folder to server
        uses: burnett01/rsync-deployments@4.1
        with:
          switches: -avzr --delete
          path: production/
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_port: ${{ secrets.DEPLOY_PORT }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_key: ${{ secrets.DEPLOY_KEY }}
          remote_path: ${{ secrets.DEPLOY_PATH }}

  restart_docker:
    name: Start the new version
    needs: create_version
    runs-on: ubuntu-18.04
    steps:
      - name: Run start script on server
        uses: appleboy/ssh-action@0.1.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          port: ${{ secrets.DEPLOY_PORT }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_PATH }} && . start.sh ${{ github.event.release.tag_name }}